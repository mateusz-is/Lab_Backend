{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Tablica ogłoszeń",
        "description": "W ramach projektu stowrzyłem api do platformy reklamowej/ogłoszeniowej. Api umożliwia wyświetlanie listy reklam, edycję/usuwanie reklam, przypisywanie reklam do odpowiednich kategorii oraz wyświetlanie reklam na podstawie kategorii lub innych parametrów. `Właściciel reklamy` i `admin` posiadają uprawnienia do edycji lub usuwania. Właściciel reklamy może edytować tylko swoje wpisy, a admin wszystko. Kategorie są mogą być obsługiwane tylko przez `admina`, każdy może je jednak wyświetlić. Api pozwala także na rejestrację nowych użytkowników oraz logowanie. Logowanie odbywa się za pomocą tokenu Bearer, w którym zaszyfrowane są informację np. poziomach dostępu. W programie zdefiniowałem trzy poziomy dostępu `admin`, `editor` i `user`. Admin ma dostęp do edycji wszystkiego z kolei edytor może dodawać nowe wpisy. Tylko admin może edytować poziomy uprawnień oraz wyświetlać listę wszystkich użytkowników.",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://54.37.138.253:{port}/api",
            "description": "The production API server",
            "variables": {
                "port": {
                    "enum": [
                        "8020",
                        "8022",
                        "8023"
                    ],
                    "default": "8020"
                }
            }
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "scheme": "bearer",
                "name": "x-access-token",
                "bearerFormat": "JWT",
                "in": "header"
            }
        }
    },
    "paths": {
        "/ads": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "minimum": "1"
                        },
                        "description": "limit"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "schema": {
                            "type": "integer",
                            "minimum": "1"
                        },
                        "description": "skip"
                    }
                ],
                "summary": "Pobierz wszystkie reklamy z bazy danych :8020",
                "description": "Endpoint nie ma żadnych ograniczneń, wyświetlane są wszystkie reklamy.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ads"
                        }
                    }
                }
            }
        },
        "/ad/{id}": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Pobierz wszystkie reklamy z bazy danych według wskazanego ID :8020",
                "description": "Endpoint nie ma żadnych ograniczneń.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ad Id",
                        "type": "Number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ads"
                        }
                    }
                }
            }
        },
        "/ads/published": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Pobierz wszystkie opublikowane reklamy. :8020",
                "description": "Endpoint nie ma żadnych ograniczneń.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ads"
                        }
                    }
                }
            }
        },
        "/ads/category/{id}": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Pobierz wszystkie reklamy według wskazanej kategorii. :8020",
                "description": "Endpoint nie ma żadnych ograniczneń.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "type": "Number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ads"
                        }
                    }
                }
            }
        },
        "/ads/author/{id}": {
            "get": {
                "tags": [
                    "Ads"
                ],
                "summary": "Pobierz wszystkie reklamy dla wybranego autora. :8020",
                "description": "Endpoint nie ma żadnych ograniczneń.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Author Id",
                        "type": "Number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ads"
                        }
                    }
                }
            }
        },
        "/ads/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Ads"
                ],
                "summary": "Zaktualizuj wybraną reklamę. :8020",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. Jeśli użytkownik posiada uprawnienia `admin` to może edytować dowolny wpis. Jeśli użytkownik posiada uprawnienia `editor` lub inne to może edytować tylko własne wpisy. W celu edycji reklamy należy podać jej `ID`.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UpdateAds"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ad details updated!",
                        "schema": {
                            "$ref": "#/definitions/UpdateAds"
                        }
                    }
                }
            }
        },
        "/ads/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Ads"
                ],
                "summary": "Usuń wybraną reklamę. :8020",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. Jeśli użytkownik posiada uprawnienia `admin` to może usuwać dowolny wpis. Jeśli użytkownik posiada uprawnienia `editor` lub inne to może usuwać tylko własne wpisy. W celu usunięcia reklamy należy podać jej `ID`.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ad Id",
                        "type": "Number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ads"
                        }
                    }
                }
            }
        },
        "/ad/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Ads"
                ],
                "summary": "Utwórz reklamę. :8020",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. W celu dodania reklamy użytkownik musi posiadać uprawnienia `admin` lub `editor` inne nie są akceptowane. Pole authorId wypełnia się automatycznie `id` użytkownika pobierane jest z przekazanego tokenu.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Ads"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New Ad is created",
                        "schema": {
                            "$ref": "#/definitions/Ads"
                        }
                    }
                }
            }
        },
        "/category/all": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Pobierz wszystkie kategorie. :8020",
                "description": "Endpoint nie ma żadnych ograniczneń.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                }
            }
        },
        "/category/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Utwórz kategorię. :8020",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. W celu dodania kategorii użytkownik musi posiadać uprawnienia `admin` inne nie są akceptowane. ",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New Category is created",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                }
            }
        },
        "/category/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Edytuj kategorię. :8020",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. W celu edytowania kategorii użytkownik musi posiadać uprawnienia `admin` inne nie są akceptowane. ",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category details updated!",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                }
            }
        },
        "/category/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category Id",
                        "type": "Number"
                    }
                ],
                "summary": "Usuń kategorię. :8020",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. W celu usunięcia kategorii użytkownik musi posiadać uprawnienia `admin` inne nie są akceptowane. W celu usunięcia kategori podajemy jej numer `ID` ",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Zarejestruj nowego użytkownika :8023",
                "description": "Endpoint nie posiada ograniczeń. Uprawnienia jakie za każdym razem otrzymuje nowy użytkownik to `user`. Nie ma możliwości ich zmiany podczas rejestracji.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Users"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Edytuj  użytkownika :8023",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. Konto z uprawnieniami `admin` pozwala na edycję każdego profilu. Konta z pozostałymi uprawnienami mogą edytować tylko własne profile. Dodane jest też zabezpiecznie sprawdzajace czy użytkownik nie zmienia adresu email na taki, który istnieje już w bazie.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Users"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User details updated!",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/user/update/permission": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Edytuj uprawnienia :8023",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. Aby dokonać edycji wymagane są uprawnienia administratora.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User details updated!",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Zaloguj się :8023",
                "description": "Endpoint nie posiada ograniczeń. Po zalogowaniu otrzymujemy token, który należy przesyłać z nagłówku x-access-token. Przykładowe dane: Uprawnienia `admin` Login: `admin@admin.pl` Hasło: `admin`. Uprawnienia `edytor` Login: `editor@editor.pl` Hasło: `editor` ",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/authUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/users/list": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Lista wszystkich użytkowników :8023",
                "description": "Endpoint posiada ograniczenia. Wymagane są uprawnienia `admin`.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User Id",
                        "type": "Number"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Usuń użytkownika :8023",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. Użytkownik z uprawnieniami `admin` może usunąć każde konto, z kolei pozostali użytkownicy mogą usunać tylko własne profile.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/send/message/": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Wyślij wiadomość :8022",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/form"
                            }
                        }
                    }
                },
                "tags": [
                    "Contact Form"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/form"
                        }
                    }
                }
            }
        },
        "/logged/message/list/": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Zobacz swoje wiadomości :8022",
                "description": "Endpoint wymaga, aby użytkownik był zalogowany. Użytkownik widzi tylko swoje wiadomości.",
                "tags": [
                    "Contact Form"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/form"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Ads": {
            "required": [
                "title",
                "_id"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "authorID": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "categoryID": {
                    "type": "number"
                },
                "published": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "uniqueItems": true
                }
            }
        },
        "UpdateAds": {
            "required": [
                "title",
                "_id"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "categoryID": {
                    "type": "number"
                },
                "published": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "uniqueItems": true
                }
            }
        },
        "Category": {
            "required": [
                "name",
                "_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "published": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "uniqueItems": true
                }
            }
        },
        "Users": {
            "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "isActive"
            ],
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "uniqueItems": true
                }
            }
        },
        "Permission": {
            "required": [
                "permission"
            ],
            "properties": {
                "permission": {
                    "type": "string"
                },
                "userId": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "form": {
            "required": [
                "firstName",
                "lastName",
                "phone",
                "email",
                "description",
                "ownerId"
            ],
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                }
            }
        },
        "authUser": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}